[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dreamlog"
version = "0.8.0"
description = "Logic programming with S-expressions and LLM integration"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "DreamLog Contributors"}
]
maintainers = [
    {name = "DreamLog Contributors"}
]
keywords = [
    "logic-programming", 
    "prolog", 
    "s-expressions", 
    "llm", 
    "ai", 
    "knowledge-base",
    "unification",
    "backtracking"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Interpreters"
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.31.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "pylint>=2.17.0",
    "mypy>=1.5.0"
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0"
]
integrations = [
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "websockets>=11.0",
    "jupyter>=1.0.0",
    "numpy>=1.24.0"
]
all = [
    "dreamlog[dev,docs,integrations]"
]

[project.urls]
Homepage = "https://github.com/spinoza/dreamlog"
Repository = "https://github.com/spinoza/dreamlog"
Issues = "https://github.com/spinoza/dreamlog/issues"
Changelog = "https://github.com/spinoza/dreamlog/blob/master/CHANGELOG.md"

[project.scripts]
dreamlog = "dreamlog.repl:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["dreamlog*"]
exclude = ["tests*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=dreamlog",
    "--cov-report=term-missing",
    "--cov-fail-under=80"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "llm: marks tests that require LLM integration"
]

[tool.coverage.run]
source = ["dreamlog"]
omit = [
    "tests/*",
    "dreamlog/__main__.py",
    "**/conftest.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | venv
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-locals",
    "too-many-branches",
    "too-many-statements"
]